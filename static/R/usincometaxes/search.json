[{"path":"https://shanejorr.github.io/usincometaxes/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 Shane Orr Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://shanejorr.github.io/usincometaxes/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Shane Orr. Author, maintainer.","code":""},{"path":"https://shanejorr.github.io/usincometaxes/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Orr S (2021). usincometaxes: Calculate Federal State Income Taxes United States. https://github.com/shanejorr/usincometaxes, https://shaneorr.io/r/usincometaxes.","code":"@Manual{,   title = {usincometaxes: Calculate Federal and State Income Taxes in the United States},   author = {Shane Orr},   year = {2021},   note = {https://github.com/shanejorr/usincometaxes, https://shaneorr.io/r/usincometaxes}, }"},{"path":"https://shanejorr.github.io/usincometaxes/index.html","id":"calculate-federal-and-state-income-taxes","dir":"","previous_headings":"","what":"Calculate Federal and State Income Taxes","title":"Calculate Federal and State Income Taxes in the United States","text":"usincometaxes calculates federal state income taxes United States. relies National Bureau Economic Research’s (NBER) TAXSIM 32 tax simulator calculations. package takes care behind--scenes work getting data proper format, converting proper file type uploading NBER server, uploading data, downloading results, placing results tidy data frame. NOTE: package associated NBER. private creation uses wonderful tax calculator.","code":""},{"path":"https://shanejorr.github.io/usincometaxes/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Calculate Federal and State Income Taxes in the United States","text":"can install usincometaxes GitHub :","code":"devtools::install_github(\"shanejorr/usincometaxes\")"},{"path":"https://shanejorr.github.io/usincometaxes/index.html","id":"quick-example","dir":"","previous_headings":"","what":"Quick example","title":"Calculate Federal and State Income Taxes in the United States","text":"usincometaxes contains one function: taxsim_calculate_taxes(). simple example use. Users can use id_number column join tax data original data set. Every id_number input data represented output tax data.","code":"library(tidyverse) library(knitr) library(usincometaxes)  family_income <- data.frame(   id_number = as.integer(c(1, 2)),   state = c('North Carolina', 'NY'),   tax_year = c(2015, 2020),   filing_status = c('single', 'married, jointly'),   primary_wages = c(10000, 100000),   primary_age = c(26, 36) )  family_taxes <- taxsim_calculate_taxes(family_income) #> [1] \"All required columns are present and the data is in the proper format!\" #> [1] \"Uploading data to TAXSIM server.\" #> [1] \"Downloading data to TAXSIM server.\" kable(family_taxes) family_income %>%   left_join(family_taxes, by = 'id_number') %>%   kable()"},{"path":"https://shanejorr.github.io/usincometaxes/index.html","id":"output","dir":"","previous_headings":"","what":"Output","title":"Calculate Federal and State Income Taxes in the United States","text":"taxsim_calculate_taxes() returns data frame containing following columns: id_number: ID number input data set, users can match tax information input data set federal_taxes: Total federal taxes state_taxes: Total state taxes, state identified fica_taxes: Total FICA taxes, including employers employees share federal_marginal_rate: Marginal federal tax rate state_marginal_rate: Marginal state tax rate, state identified fica_rate: FICA rate","code":""},{"path":"https://shanejorr.github.io/usincometaxes/index.html","id":"input","dir":"","previous_headings":"","what":"Input","title":"Calculate Federal and State Income Taxes in the United States","text":".data parameter taxsim_calculate_taxes(). data frame containing information used calculate taxes. Column names must match names .","code":""},{"path":"https://shanejorr.github.io/usincometaxes/index.html","id":"required-columns","dir":"","previous_headings":"Input","what":"Required columns","title":"Calculate Federal and State Income Taxes in the United States","text":"following columns required: id_number arbitrary, non-negative, integer. number links results TAXSIM 32 original data frame entries. tax_year Tax year ending Dec 31 (4 digits 1960 2023). State must zero year 1977 2023. filing_status Filing status tax unit. One following: “single” single; “married, jointly” married, filing jointly; “married, separately” married, filing separately; “dependent child” dependent, usually child income; “head household” head household filing status.","code":""},{"path":"https://shanejorr.github.io/usincometaxes/index.html","id":"optional-columns","dir":"","previous_headings":"Input","what":"Optional columns","title":"Calculate Federal and State Income Taxes in the United States","text":"Optional columns can found help documentation taxsim_calculate_taxes() section Optional columns. Use ?taxsim_calculate_taxes access help documentation.","code":""},{"path":"https://shanejorr.github.io/usincometaxes/index.html","id":"giving-credit","dir":"","previous_headings":"","what":"Giving credit","title":"Calculate Federal and State Income Taxes in the United States","text":"NBER’s TAXSIM 32 tax simulator tax calculations. package simply lets users interact tax simulator R. Therefore, users cite TAXSIM 32 tax simulator use package work:           Feenberg, Daniel Richard, Elizabeth Coutts, Introduction TAXSIM Model, Journal Policy Analysis Management vol 12 1, Winter 1993, pages 189-194.","code":""},{"path":"https://shanejorr.github.io/usincometaxes/reference/check_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Ensure input data set has required fields and datatypes are correct — check_data","title":"Ensure input data set has required fields and datatypes are correct — check_data","text":"Check ensure required column present data types correct. function binds checks helper functions.","code":""},{"path":"https://shanejorr.github.io/usincometaxes/reference/check_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ensure input data set has required fields and datatypes are correct — check_data","text":"","code":"check_data(.data, cols, state_column_name)"},{"path":"https://shanejorr.github.io/usincometaxes/reference/check_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ensure input data set has required fields and datatypes are correct — check_data","text":".data data frame containing input parameters TAXSIM 32 program. column names input parameters . column can order. cols column names, string, data set .data state_column_name column name state column.","code":""},{"path":"https://shanejorr.github.io/usincometaxes/reference/check_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Ensure input data set has required fields and datatypes are correct — check_data","text":"function return value. either produces stop message error prints checks successful.","code":""},{"path":"https://shanejorr.github.io/usincometaxes/reference/check_greater_zero.html","id":null,"dir":"Reference","previous_headings":"","what":"Check that columns are greater than zero — check_greater_zero","title":"Check that columns are greater than zero — check_greater_zero","text":"columns must values greater zero. Check make sure true.","code":""},{"path":"https://shanejorr.github.io/usincometaxes/reference/check_greater_zero.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check that columns are greater than zero — check_greater_zero","text":"","code":"check_greater_zero(.data, cols)"},{"path":"https://shanejorr.github.io/usincometaxes/reference/check_greater_zero.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check that columns are greater than zero — check_greater_zero","text":".data data frame containing input parameters TAXSIM 32 program. column names input parameters . column can order. cols column names, string, data set .data.","code":""},{"path":"https://shanejorr.github.io/usincometaxes/reference/check_id_number.html","id":null,"dir":"Reference","previous_headings":"","what":"Check that the id_number column is an integer and every value is unique. — check_id_number","title":"Check that the id_number column is an integer and every value is unique. — check_id_number","text":"id_number column requires data type integer unique value. Check make sure true..","code":""},{"path":"https://shanejorr.github.io/usincometaxes/reference/check_id_number.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check that the id_number column is an integer and every value is unique. — check_id_number","text":"","code":"check_id_number(id_number_col)"},{"path":"https://shanejorr.github.io/usincometaxes/reference/check_id_number.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check that the id_number column is an integer and every value is unique. — check_id_number","text":"id_number_col Vector id id_number column. always column id_number input data frame.","code":""},{"path":"https://shanejorr.github.io/usincometaxes/reference/check_numeric.html","id":null,"dir":"Reference","previous_headings":"","what":"Check numeric columns — check_numeric","title":"Check numeric columns — check_numeric","text":"Checks column numeric integer numeric integer.","code":""},{"path":"https://shanejorr.github.io/usincometaxes/reference/check_numeric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check numeric columns — check_numeric","text":"","code":"check_numeric(.data, cols)"},{"path":"https://shanejorr.github.io/usincometaxes/reference/check_numeric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check numeric columns — check_numeric","text":".data data frame containing input parameters TAXSIM 32 program. column names input parameters . column can order. cols column names, string, data set .data.","code":""},{"path":"https://shanejorr.github.io/usincometaxes/reference/check_required_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"Ensure the required columns are present — check_required_cols","title":"Ensure the required columns are present — check_required_cols","text":"Ensure required columns present","code":""},{"path":"https://shanejorr.github.io/usincometaxes/reference/check_required_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Ensure the required columns are present — check_required_cols","text":"","code":"check_required_cols(cols)"},{"path":"https://shanejorr.github.io/usincometaxes/reference/check_required_cols.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Ensure the required columns are present — check_required_cols","text":"cols column names, string, data set .data","code":""},{"path":"https://shanejorr.github.io/usincometaxes/reference/check_state.html","id":null,"dir":"Reference","previous_headings":"","what":"Check state column — check_state","title":"Check state column — check_state","text":"State either two letter abbreviation full state name. Check make sure true.","code":""},{"path":"https://shanejorr.github.io/usincometaxes/reference/check_state.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check state column — check_state","text":"","code":"check_state(.data, cols, state_column_name)"},{"path":"https://shanejorr.github.io/usincometaxes/reference/check_state.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check state column — check_state","text":".data data frame containing input parameters TAXSIM 32 program. column names input parameters . column can order. cols column names, string, data set .data. state_column_name column name state column.","code":""},{"path":"https://shanejorr.github.io/usincometaxes/reference/clean_from_taxsim.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean final TAXSIM data set. — clean_from_taxsim","title":"Clean final TAXSIM data set. — clean_from_taxsim","text":"Clean data set received TAXSIM renaming columns removing columns needed final output.","code":""},{"path":"https://shanejorr.github.io/usincometaxes/reference/clean_from_taxsim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean final TAXSIM data set. — clean_from_taxsim","text":"","code":"clean_from_taxsim(from_taxsim)"},{"path":"https://shanejorr.github.io/usincometaxes/reference/clean_from_taxsim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean final TAXSIM data set. — clean_from_taxsim","text":"from_taxsim data set received TAXSIM","code":""},{"path":"https://shanejorr.github.io/usincometaxes/reference/clean_from_taxsim.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean final TAXSIM data set. — clean_from_taxsim","text":"Data frame containing row's id_number tax calculations. data frame can merged original input data frame id_number.","code":""},{"path":"https://shanejorr.github.io/usincometaxes/reference/create_dataset_for_taxsim.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a data set to send to TAXSIM 32. — create_dataset_for_taxsim","title":"Create a data set to send to TAXSIM 32. — create_dataset_for_taxsim","text":"function takes data set, checks make sure proper format TAXSIM 32, cleans can sent TAXSIM 32.","code":""},{"path":"https://shanejorr.github.io/usincometaxes/reference/create_dataset_for_taxsim.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a data set to send to TAXSIM 32. — create_dataset_for_taxsim","text":"","code":"create_dataset_for_taxsim(.data)"},{"path":"https://shanejorr.github.io/usincometaxes/reference/create_dataset_for_taxsim.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a data set to send to TAXSIM 32. — create_dataset_for_taxsim","text":".data data set used calculate taxes ","code":""},{"path":"https://shanejorr.github.io/usincometaxes/reference/create_dataset_for_taxsim.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a data set to send to TAXSIM 32. — create_dataset_for_taxsim","text":"None","code":""},{"path":"https://shanejorr.github.io/usincometaxes/reference/from_taxsim_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"Map output column names. — from_taxsim_cols","title":"Map output column names. — from_taxsim_cols","text":"Map output column names required package input column names required TAXSIM.","code":""},{"path":"https://shanejorr.github.io/usincometaxes/reference/from_taxsim_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map output column names. — from_taxsim_cols","text":"","code":"from_taxsim_cols()"},{"path":"https://shanejorr.github.io/usincometaxes/reference/get_state_soi.html","id":null,"dir":"Reference","previous_headings":"","what":"Get state SOI from name. — get_state_soi","title":"Get state SOI from name. — get_state_soi","text":"Return integer number state SOI state based either two letter abbreviation full name.","code":""},{"path":"https://shanejorr.github.io/usincometaxes/reference/get_state_soi.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get state SOI from name. — get_state_soi","text":"","code":"get_state_soi(state_column)"},{"path":"https://shanejorr.github.io/usincometaxes/reference/get_state_soi.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get state SOI from name. — get_state_soi","text":"state_column Vectors containing states calculate taxes . Generally, state column data set sent TAXSIM.","code":""},{"path":"https://shanejorr.github.io/usincometaxes/reference/get_state_soi.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get state SOI from name. — get_state_soi","text":"Named integer vector number 1 51 representing state's SOI. Names state's two letter abbreviation.","code":""},{"path":"https://shanejorr.github.io/usincometaxes/reference/recode_filing_status.html","id":null,"dir":"Reference","previous_headings":"","what":"Recode filing status. — recode_filing_status","title":"Recode filing status. — recode_filing_status","text":"Check make sure strings filing_status correct recode string integer.","code":""},{"path":"https://shanejorr.github.io/usincometaxes/reference/recode_filing_status.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recode filing status. — recode_filing_status","text":"","code":"recode_filing_status(filing_status_colname)"},{"path":"https://shanejorr.github.io/usincometaxes/reference/recode_filing_status.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recode filing status. — recode_filing_status","text":"filing_status_colname Column, vector, containing filing status","code":""},{"path":"https://shanejorr.github.io/usincometaxes/reference/recode_filing_status.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recode filing status. — recode_filing_status","text":"Vector integers reflecting numeric value filing status.","code":""},{"path":"https://shanejorr.github.io/usincometaxes/reference/taxsim_calculate_taxes.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate state and federal taxes using TAXSIM 32. — taxsim_calculate_taxes","title":"Calculate state and federal taxes using TAXSIM 32. — taxsim_calculate_taxes","text":"function calculates state federal income taxes using TAXSIM 32 tax simulator. See https://users.nber.org/~taxsim/taxsim32/ information TAXSIM 32.","code":""},{"path":"https://shanejorr.github.io/usincometaxes/reference/taxsim_calculate_taxes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate state and federal taxes using TAXSIM 32. — taxsim_calculate_taxes","text":"","code":"taxsim_calculate_taxes(.data)"},{"path":"https://shanejorr.github.io/usincometaxes/reference/taxsim_calculate_taxes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate state and federal taxes using TAXSIM 32. — taxsim_calculate_taxes","text":".data Data frame containing information used calculate taxes. data set sent TAXSIM. Data frame must specified column names data types.","code":""},{"path":"https://shanejorr.github.io/usincometaxes/reference/taxsim_calculate_taxes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate state and federal taxes using TAXSIM 32. — taxsim_calculate_taxes","text":"Returns data frame following columns: id_number unique id number row corresponds id number .datafederal_taxes Total federal taxes due. Corresponds fiitax TAXSIM. state_taxes Total state taxes due; state taxes calculated. Corresponds siitax TAXSIM. fica_taxes Total FICA taxes due. includes employee company share. Corresponds fica TAXSIM. federal_marginal_rate Federal marginal tax rate taxpayer. Corresponds frate TAXSIM. state_marginal_rate State marginal tax rate taxpayer. Corresponds srate TAXSIM. fica_rate FICA rate. Corresponds ficar TAXSIM.","code":""},{"path":"https://shanejorr.github.io/usincometaxes/reference/taxsim_calculate_taxes.html","id":"required-columns","dir":"Reference","previous_headings":"","what":"Required columns","title":"Calculate state and federal taxes using TAXSIM 32. — taxsim_calculate_taxes","text":"id_number arbitrary, non-negative, integer. number links results TAXSIM 32 original data frame entries. tax_year Tax year ending Dec 31 (4 digits 1960 2023). State must zero year 1977 2023. filing_status Filing status tax unit. One following: \"single\" single; \"married, jointly\" married, filing jointly; \"married, separately\" married, filing separately; \"dependent child\" dependent, usually child income; \"head household\" head household filing status.","code":""},{"path":"https://shanejorr.github.io/usincometaxes/reference/taxsim_calculate_taxes.html","id":"optional-columns","dir":"Reference","previous_headings":"","what":"Optional columns","title":"Calculate state and federal taxes using TAXSIM 32. — taxsim_calculate_taxes","text":"state State two letter abbreviation state SOI code. state income taxes needed, either label \"State\" remove variable. State income tax information available 1977 2023. primary_age Age primary taxpayer December 31st tax year. Taxpayer age variables determine eligibility additional standard deductions, personal exemption, EITC AMT exclusion. spouse_age Age spouse December 31st tax year. num_dependents Total number dependents. num_dependents_thirteen Number children 13 eligible child care expenses (Dependent Care Credit). num_dependents_seventeen Number children 17 entire tax year (Child Credit). includes children 13. num_dependents_eitc Number qualifying children EITC. (Typically younger 19 younger 24 full-time student). primary_wages Wage salary income Primary Taxpayer (include self-employment QBI). spouse_wages Wage salary income Spouse (include self-employment QBI). Must zero column exist non-joint returns. dividens Dividend income (qualified dividends 2003 ). interest Interest income received (+/-). short_term_capital_gains Short Term Capital Gains losses (+/-). long_term_capital_gains Long Term Capital Gains losses (+/-). other_property_income property income subject NIIT, including: unearned limited partnership passive S-Corp profits; rent eligible QBI deduction; non-qualified dividends; capital gains distributions form 1040; income loss otherwise enumerated . other_non_property_income non-property income subject Medicare NIIT : alimony; nonwage fellowships; state income tax refunds (itemizers ). Also includes adjustments items : alimony paid; Keogh IRA contributions; foreign income exclusion; NOLs pensions Taxable Pensions IRA distributions. social_security Gross Social Security Benefits. unemployment Unemployment compensation received. other_transfer_income non-taxable transfer income : welfare; workers comp; veterans benefits; child support affect eligibility state property tax rebates taxable federal level. rent_paid Rent paid (used calculating state property tax rebates). property_taxes Real Estate taxes paid. preference AMT also used calculate state property tax rebates. other_itemized_deductions Itemized deductions preference Alternative Minimum Tax. include: state local taxes (line 8 Schedule ) plus local income tax; Preference share medical expenses; Miscellaneous (line 27). child_care_expenses Child care expenses. misc_deductions Deductions included other_itemized_deductions preference AMT, including (Schedule 2009). Might include: Deductible medical expenses included Line 16; Motor Vehicle Taxes paid; Home mortgage interest; Charitable contributions; Casulty Theft Losses. scorp_income Active S-Corp income (SSTB). qualified_business_income Primary Taxpayer's Qualified Business Income (QBI) subject preferential rate without phaseout assuming sufficient wages paid capital eligible full deduction. Subject SECA Medicare additional Earnings Tax. specialized_service_trade Primary Taxpayer's Specialized Service Trade Business service (SSTB) preferential rate subject claw-back. Subject SECA Medicare Additional Earnings Tax. spouse_qualified_business_income Spouse's QBI. Must zero non-joint returns, column exist. spouse_specialized_service_trade Spouse's SSTB. Must zero non-joint returns, column exist.","code":""},{"path":"https://shanejorr.github.io/usincometaxes/reference/taxsim_calculate_taxes.html","id":"giving-credit-where-it-is-due","dir":"Reference","previous_headings":"","what":"Giving credit where it is due","title":"Calculate state and federal taxes using TAXSIM 32. — taxsim_calculate_taxes","text":"NBER's TAXSIM 32 tax simulator tax calculations. package simply lets users interact tax simulator R. Therefore, users cite TAXSIM 32 tax simulator use package work: Feenberg, Daniel Richard, Elizabeth Coutts, Introduction TAXSIM Model, Journal Policy Analysis Management vol 12 1, Winter 1993, pages 189-194.","code":""},{"path":"https://shanejorr.github.io/usincometaxes/reference/taxsim_calculate_taxes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate state and federal taxes using TAXSIM 32. — taxsim_calculate_taxes","text":"","code":"family_income <- data.frame(     id_number = as.integer(c(1, 2)),      state = c('North Carolina', 'NY'),      tax_year = c(2015, 2015),      filing_status = c('single', 'married, jointly'),      primary_wages = c(10000, 100000),      primary_age = c(26, 36) )  family_taxes <- taxsim_calculate_taxes(family_income) #> [1] \"All required columns are present and the data is in the proper format!\" #> [1] \"Uploading data to TAXSIM server.\" #> [1] \"Downloading data to TAXSIM server.\"  merge(family_income, family_taxes, by = 'id_number') #>   id_number          state tax_year    filing_status primary_wages primary_age #> 1         1 North Carolina     2015           single         1e+04          26 #> 2         2             NY     2015 married, jointly         1e+05          36 #>   federal_taxes state_taxes fica_taxes federal_marginal_rate #> 1       -369.12      143.75       1530                  7.65 #> 2      11437.50     4761.98      15300                 25.00 #>   state_marginal_rate fica_rate #> 1                5.75        15 #> 2                6.45        15"},{"path":"https://shanejorr.github.io/usincometaxes/reference/taxsim_cols.html","id":null,"dir":"Reference","previous_headings":"","what":"Map input column names. — taxsim_cols","title":"Map input column names. — taxsim_cols","text":"Map input column names required package input column names required TAXSIM.","code":""},{"path":"https://shanejorr.github.io/usincometaxes/reference/taxsim_cols.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map input column names. — taxsim_cols","text":"","code":"taxsim_cols()"},{"path":"https://shanejorr.github.io/usincometaxes/reference/usincometaxes.html","id":null,"dir":"Reference","previous_headings":"","what":"usincometaxes: A package for calculating state and federal income taxes in the United States. — usincometaxes","title":"usincometaxes: A package for calculating state and federal income taxes in the United States. — usincometaxes","text":"usincometaxes package single function packages calculates state federal income taxes United State. relies NBER's TAXSIM 32 tax calculator calculations. See https://users.nber.org/~taxsim/taxsim32/ information TAXSIM 32.","code":""}]
